name: Release Workflow

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
  pull_request:
    types: [closed]

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Check input is greater than current version
      id: version_check
      uses: actions/github-script@v5
      with:
        script: |
          const semver = require('semver');
          const versionInput = '${{ inputs.version }}';
          const latestRelease = await github.rest.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          const latestVersion = latestRelease.data.tag_name;
          console.log(`Latest version: ${latestVersion}, New version: ${versionInput}`);
          if (semver.gt(versionInput, latestVersion)) {
            core.setOutput('new_version', versionInput);
            return;
          }
          core.setFailed('New version is not greater than the latest version.');

    - name: Batch changes
      uses: miniscruff/changie-action@6dcc2533cac0495148ed4046c438487e4dceaa23 # v2.0.0
      with:
        version: latest
        args: batch ${{ inputs.version }}
    
    - name: Merge changes
      uses: miniscruff/changie-action@6dcc2533cac0495148ed4046c438487e4dceaa23 # v2.0.0
      with:
        version: latest
        args: merge

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        title: Release ${{ inputs.version }}
        branch: release/${{ inputs.version }}
        commit-message: Release ${{ inputs.version }}
        labels: release
        body: |
            Automated release PR created by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action.

            See `CHANGELOG.md` and `.changes/${{ inputs.version }}.md` file to preview the release notes and commit any modifications to this PR.

            When this PR is merged to `main`, a new release is created, tagged, and published with ${{ inputs.version }}.

  publish-package:
    needs: prepare-release
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.title == 'Release ${{ inputs.version }}'
    steps:
    - name: Checkout
      uses: actions/checkout@v2
